name: Build CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build_android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Configure Yarn cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js 13
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'

    - name: Install dependencies, build and add platform
      run: |
        yarn install --frozen-lockfile
        yarn build
        yarn add-platform:android

    - name: Use JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Build debug APK with Gradle
      run: |
        chmod +x gradlew
        ./gradlew assembleDebug --stacktrace
      working-directory: android

    - name: Upload APK artifact
      uses: actions/upload-artifact@v1
      with:
        name: app
        path: ./android/app/build/outputs/apk/debug/app-debug.apk

  build_ios :
    name: Build iOS IPA
    runs-on: macos-latest
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Configure Yarn cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Use Node.js 13
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'

    - name: Install dependencies, build and add platform
      run: |
        yarn install --frozen-lockfile
        yarn build
        yarn add-platform:ios

    - name: Select Xcode
      run: sudo xcode-select -switch /Applications/Xcode_11.3.app

    - name: Build archive
      run: |
        xcodebuild -sdk iphoneos -project ios/App/App.xcodeproj \
          -configuration Release -scheme App \
          -derivedDataPath DerivedData \
          -archivePath ios/Archive/App archive

    - name: Export Archive
      run: |
        xcodebuild -exportArchive \
          -archivePath ios/Archive/App.xcarchive \
          -exportOptionsPlist provisioning/App-Store.plist \
          -exportPath DerivedData/ipa